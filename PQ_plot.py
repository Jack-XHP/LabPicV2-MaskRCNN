import tkinter
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
matplotlib.use('TkAgg')



Train_M_PQ =[0.05321653774647564,0.07171915355072739,0.0768420733645812,0.07931055903354131,0.0951874386558944, 0.08344755292626578,0.0938475634318319, 0.09284611204822564, 0.09327755949575739, 0.09207923287610642, 0.09339257188730514, 0.08656201605009896, 0.0898650994798467, 0.0898650994798467,0.08803561241555984, 0.08039842441621256, 0.07616085813095834, 0.06574418731460464, 0.04100580903494045    ]
Train_M_RQ = [0.08244836524793044,0.11274457958751984,0.11981787682722263,0.1252930450638187,0.14823039555863984,0.12988140005785362,0.14544909281751386,0.1427898948689785, 0.14670947030497591 ,0.14321069130506517, 0.14507947243828204, 0.1363479461511909, 0.14082503556187767, 0.14082503556187767, 0.13713001124016486, 0.12717433320448396, 0.12166231680385464, 0.10526315789473684, 0.06836397925506836     ]
Train_M_SQ = [0.6454529157303267,0.636120634917568,0.6413239443007946,0.6330004909142726,0.6421587036664036,0.6424904019289551,0.6452261861101928,0.650228870421255, 0.6357978070662675,0.6429633991498629,0.6437338812838259,0.6348611658155359,0.6381329791346689, 0.6381329791346689,0.6419864741451617,0.6321906503487595,0.626002036881689, 0.6245697794887441,0.599816006642129]
Train_V_PQ =[0.02190316342890542,0.030615767757594867 ,0.042843171266680705,0.048190936958799814,0.05583087559537737,0.06051783099052792,0.0706865703004565,0.07355410353439827, 0.0730869957780754, 0.07484490971032166, 0.08194024878129938, 0.07836052062288051, 0.0815958270161964,0.0815958270161964, 0.07033638745059136, 0.0709335326453581, 0.06247602457799586, 0.05370768803912188, 0.022462903047229282       ]
Train_V_RQ = [0.03524110565606295,0.049506726457399106,0.0695970695970696,0.07732396073203249,0.08982437324038074,0.09679250638660233,0.23980815347721823, 0.11723027375201288, 0.11627513942876458, 0.11965811965811966, 0.13119642191576594, 0.12599960990832845, 0.13116751269035534,0.22761506276150628,0.11379928315412187, 0.11442080378250591, 0.10222672064777327, 0.08714716360646753, 0.03747221340107971   ]
Train_V_SQ = [0.6215231622602952,0.6184163233644615,0.6155887239896753,0.6232342019546352,0.6215559717401788,0.6252326058053661,0.6370181590074504,0.6274326688854578,0.6285694099111513,0.6254896025791168,0.6245616121597336,0.621910819246917,0.6220734490011877,0.6339518238304603, 0.6180740818492909,0.6199356262187288,0.6111516067629694, 0.616287275643886,0.5994549296247882]

Test_M_PQ =[0.09657926155188086,0.11683319432179903,0.12811303297752785,0.1376695304006257,0.144161975693873,0.14972785509569653,0.14695013585133326,0.14949047419732386, 0.14333243670083587, 0.13327068634114853, 0.12959332176905583, 0.1251492671467425, 0.1228620631249538, 0.11729291744815012,0.11689359995282823, 0.1106710537241465, 0.10902435601558567, 0.0975226884870999, 0.07078862842389994      ]
Test_M_RQ = [0.14425587467362924,0.17076218242399,0.1930835734870317,0.20991561181434598,0.2178329571106095,0.2275449101796407,0.22401991288114498,0.22849807445442877, 0.21944809461235218 ,0.20550705171255876, 0.19918144611186903, 0.19295774647887323, 0.1900647948164147, 0.18248712288447388, 0.18264150943396226, 0.1743827160493827, 0.1719242902208202, 0.15599343185550082, 0.1147396293027361   ]
Test_M_SQ = [0.6694996773641696,0.6841865843088768,0.6635107827343606,0.6558327377879054,0.6618005723563289,0.6580145210784558,0.6559690786474793,0.6542307831444679,0.6531496067624916,0.6484969018365038,0.6506294853199858,0.6485837932422421,0.6464219912142456, 0.642746269403371,0.6400166113119727,0.634644626665902,0.6341416670998286,0.625171760933093,0.6169501231098357]
Test_V_PQ =[0.05122982443376527,0.0801628650988734,0.10057330634775097,0.11930134643318648,0.1359818447009468,0.13991736222685275,0.15276214844303368, 0.1576830058782828, 0.15508257389981267, 0.15511037416855192, 0.1561040789965099, 0.15116580244803993, 0.1442969841689416, 0.13791092438136993, 0.13247398076037586, 0.12481095893744527, 0.11746188333596981, 0.0963906799535319, 0.04251634150147003   ]
Test_V_RQ = [0.0794392523364486,0.12421929215822346,0.15687885010266941,0.18796296296296297,0.2130479102956167,0.21925431274346133,0.23980815347721823,0.24645161290322581, 0.2418478260869565 ,0.24086021505376345, 0.24297646165527714, 0.23661071143085532, 0.22761506276150628, 0.21863799283154123, 0.20941402497598463, 0.19648397104446744,0.18807339449541285, 0.15676359039190899, 0.06966618287373004    ]
Test_V_SQ = [0.6448930840485746,0.6453334559076903,0.641089007740245,0.6347066706790216,0.6382688500077933,0.6381510150295797,0.6370181590074504,0.6398132437469589,0.6412403055632704,0.6439850356105057,0.6424658501200111,0.638879793454385,0.6339518238304603, 0.6307729164328231,0.6325936420713361,0.6352220910132083,0.6245534284693028, 0.6148792568003526,0.6102866519690178]

x = np.arange(0.05, 1, 0.05)

plt.plot(x, Train_M_PQ)
plt.plot(x, Train_V_PQ)
plt.plot(x, Test_V_PQ)
plt.plot(x, Test_M_PQ)
plt.legend(['train material', 'train vessel', 'test vessel', 'test material'], loc='upper left')
plt.title("threshold vs PQ")
plt.xlabel("threshold")
plt.ylabel("PQ")
plt.show()

plt.plot(x, Train_M_RQ)
plt.plot(x, Train_V_RQ)
plt.plot(x, Test_V_RQ)
plt.plot(x, Test_M_RQ)
plt.legend(['train material', 'train vessel', 'test vessel', 'test material'], loc='upper left')
plt.title("threshold vs RQ")
plt.xlabel("threshold")
plt.ylabel("RQ")
plt.show()

plt.plot(x, Train_M_SQ)
plt.plot(x, Train_V_SQ)
plt.plot(x, Test_V_SQ)
plt.plot(x, Test_M_SQ)
plt.legend(['train material', 'train vessel', 'test vessel', 'test material'], loc='upper left')
plt.title("threshold vs SQ")
plt.xlabel("threshold")
plt.ylabel("SQ")
plt.show()